@using Microsoft.AspNetCore.Mvc.Rendering
@{
    ViewData["Title"] = "Home Page";
}
<head>
    <link rel="stylesheet" href="https://developer.api.autodesk.com/modelderivative/v2/viewers/style.min.css" type="text/css" />
    <script src="https://developer.api.autodesk.com/viewingservice/v1/viewers/three.min.js"></script>
    <script src="https://developer.api.autodesk.com/viewingservice/v1/viewers/viewer3D.min.js"></script>
    @*<script src="~/js/forge.js"></script>*@
</head>

<body>
<div hidden>
<form method="post" asp-controller="Home" asp-action="IndexName">
    @*<label for="typeName">Type Name</label>*@
    <input id="typeFileName"type="text" placeholder="Selected Type Name" name="DATA">
    <input id="typeNameSubmit" type="submit" value="Submit"/>
</form>
</div>

@*<div id="testDiv">
    Include a header DIV with the same name as the draggable DIV, followed by "header":
    <div id="testDivheader">Details Panel</div>
    @*<div id="tableDetails" style="margin-top: 45px; margin-left: 560px; margin-right: 10px; ">
        <table id="TypeDetails"></table>
    </div>
</div>*@


@*<script type="text/javascript">
    var urn = "@Model";
    showModel(urn);
</script>*@

<div class="row">
    <div class="col-md-3" style="width: 300px">
        <button class="accordion" style="margin-top: 45px">Element</button>
        <div class="panel">
            <button class="btn btn-link" onclick="selectCategory(this.innerText)">Elektrische Ausstattung</button><br/>
            <button class="btn btn-link" onclick="selectCategory(this.innerText)">Elektroinstallationen</button><br/>
            <button class="btn btn-link" onclick="selectCategory(this.innerText)">Kommunikationsgeräte</button><br/>
            <button class="btn btn-link" onclick="selectCategory(this.innerText)">Datengeräte</button><br/>
            <button class="btn btn-link" onclick="selectCategory(this.innerText)">Brandmeldegeräte</button><br/>
            <button class="btn btn-link" onclick="selectCategory(this.innerText)">Lichtschalter</button><br/>
            <button class="btn btn-link" onclick="selectCategory(this.innerText)">Leuchten</button><br/>
            <button class="btn btn-link" onclick="selectCategory(this.innerText)">Notrufgeräte</button><br/>
            <button class="btn btn-link" onclick="selectCategory(this.innerText)">Sicherheitsgeräte</button><br/>
            <button class="btn btn-link" onclick="selectCategory(this.innerText)">Telefongeräte</button><br/>
            <button class="btn btn-link" onclick="selectCategory(this.innerText)">Allgemeines Modell</button><br/>
        </div>

        <button class="accordion">Installationsmedium</button>
        <div id="installMediumCategories" class="panel">
            <p>Nach Kategorie...</p>
        </div>

        <button class="accordion">Installationsort</button>
        <div class="panel">
            <p>
                <div style="float: left; width: 40px">
                    <label class="switch">
                        <input id="placementCeiling" type="checkbox" onclick="sortData()">
                        <span class="slider round"></span>
                    </label>
                </div>
                <div>Decke</div>
            </p>

            <p>
                <div style="float: left; width: 40px">
                    <label class="switch">
                        <input id="placementWall" type="checkbox" onclick="sortData()">
                        <span class="slider round"></span>
                    </label>
                </div>
                <div>Wand</div>
            </p>
            <p>
                <div style="float: left; width: 40px">
                    <label class="switch">
                        <input id="placementFloor" type="checkbox" onclick="sortData()">
                        <span class="slider round"></span>
                    </label>
                </div>
                <div>Boden</div>
            </p>
        </div>

        <button class="accordion">Installationsart</button>
        <div class="panel">
            <p>
                <div style="float: left; width: 40px">
                    <label class="switch">
                        <input id="internalMount" type="checkbox" onclick="sortData()">
                        <span class="slider round"></span>
                    </label>
                </div>
                <div>Unterputzmontage</div>
            </p>
            <p>
                <div style="float: left; width: 40px">
                    <label class="switch">
                        <input id="externalMount" type="checkbox" onclick="sortData()">
                        <span class="slider round"></span>
                    </label>
                </div>
                <div>Aufputzmontage</div>
            </p>
        </div>
    </div>
    <div class="col-md-3">
        <div>
            <input id="searchInput" class="form-control" type="search" placeholder="Search" style="width: 80%; float: left; margin: 5px" onkeyup="search()"/>
        </div>

        <div style="width: 1000px">
            <table id="TypeData"></table>
        </div>
    </div>
    <div id="details" class="col-md-3" style="width: 300px">

        @*<div id="tableDetails" style="margin-top: 45px; margin-left: 560px; margin-right: 10px; position: fixed; width: auto">
            @*<div>
                <div id="MyViewerDiv" style="height: 450px; width: 100%; background-image: url('images/loadingAnimation.gif'); background-repeat: no-repeat; background-size: contain; background-position: center; background-color: #ffffff; position: relative;"></div>
            </div>
            <table id="TypeDetails">
                <tr>
                    <td>
                        <div id="ForgeDiv"></div></td></tr>
            </table>
        </div>*@

    </div>
</div>
</body>

<style>
    #ForgeDiv {
        width: 400px;
        height: 200px;
        position: relative;
        background-image: url("images/loadingAnimation.gif")
    }

     #testDiv {
         width: 600px;
         position: absolute;
         z-index: 9;
         background-color: #f1f1f1;
         border: 1px solid #d3d3d3;
         text-align: center
     }

    #testDivheader {
        padding: 10px;
        cursor: move;
        z-index: 10;
        background-color: #2196F3;
        color: #fff;
    }

    #TypeData, #TypeDetails {
        table-layout: fixed;
        width: 100%;
        border: 1px solid #ddd;
        border-collapse: collapse;
    }

     #TypeData tr:nth-child(even), #TypeDetails tr:nth-child(even) {
         background-color: #f2f2f2
     }

    #TypeData tr:hover, #TypeDetails tr:hover {
        background-color: #ddd
    }

    #TypeData th, #TypeDetails th {
        padding-top: 12px;
        padding-bottom: 12px;
        text-align: left;
        background-color: #4CAF50;
        color: white;
        text-align: center
    }

    #TypeData td, #TypeData th, #TypeDetails td, #TypeDetails th {
        border: 1px solid #ddd;
        padding: 8px;
        word-wrap: break-word
    }

    .accordion {
        background-color: #4CAF50;
        color: white;
        cursor: pointer;
        padding: 18px;
        width: 100%;
        text-align: left;
        border: none;
        outline: none;
        transition: 0.4s;
    }

    .active, .accordion:hover {
        background-color: #4CAF50;
    }

    /* Style the accordion panel. Note: hidden by default */
    .panel {
        padding: 0 0px;
        background-color: white;
        display: none;
        overflow: hidden
    }

    .switch {
        position: relative;
        display: inline-block;
        width: 32px;
        height: 20px
    }

    /* Hide default HTML checkbox */
    .switch input {
        display: none;
    }

    /* The slider */
    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        -webkit-transition: .4s;
        transition: .4s
    }

    .slider:before {
        position: absolute;
        content: "";
        height: 14px;
        width: 14px;
        left: 4px;
        bottom: 3px;
        background-color: white;
        -webkit-transition: .4s;
        transition: .4s;
    }

    input:checked + .slider {
        background-color: #4CAF50
    }

    input:focus + .slider {
        box-shadow: 0 0 1px #4CAF50;
    }

    input:checked + .slider:before {
        -webkit-transform: translateX(10px);
        -ms-transform: translateX(10px);
        transform: translateX(10px);
    }

    /* Rounded sliders */
    .slider.round {
        border-radius: 16px;
    }

    .slider.round:before {
        border-radius: 50%;
    }
</style>

<script>
    var acc = document.getElementsByClassName("accordion");
    var i;

    for (i = 0; i < acc.length; i++) {
        acc[i].addEventListener("click", function () {
            this.classList.toggle("active");
            var panel = this.nextElementSibling;
            if (panel.style.display === "block") {
                panel.style.display = "none";
            } else {
                panel.style.display = "block";
            }
        });
        acc[i].click();
    }
</script>

<script>
    console.log("ScriptStarted");
    var xmlhttp = new XMLHttpRequest();
    xmlhttp.open("GET", "xml/FamilyData.xml", false);
    xmlhttp.send();
    var xmlDoc = xmlhttp.responseXML;
    var sortedList = new Array();
    var typesList = new Array();
    var instalMedium = new Array();
    // console.log(xmlhttp.responseXML);

    var ceiling = document.getElementById("placementCeiling");
    var wall = document.getElementById("placementWall");
    var floor = document.getElementById("placementFloor");

    var external = document.getElementById("externalMount");
    var internal = document.getElementById("internalMount");

    var family = xmlDoc.getElementsByTagName("FamilyData");
    for (var i = 0; i < family.length; i++) {
        var types = family[i].getElementsByTagName("FamilyTypeData");
        for (var j = 0; j < types.length; j++) {
            var category = family[i].getElementsByTagName("Category")[0].childNodes[0].nodeValue;
            var typeName = types[j].getElementsByTagName("Name")[0].childNodes[0].nodeValue;
            var typeDescription = " --- ";

            try {
                typeDescription =
                    types[j].getElementsByTagName("Description")[0].childNodes[0].nodeValue.replace(
                        /(\r\n\t|\n|\r\t)/gm,
                        "");
            } catch (error) {
                console.error(error);
            }
            var typeCombinedDescription = types[j].getElementsByTagName("CombinedTypeData")[0].childNodes[0].nodeValue;
            var typeMount = types[j].getElementsByTagName("MountType")[0].childNodes[0].nodeValue;
            var typePlacement = types[j].getElementsByTagName("Placement")[0].childNodes[0].nodeValue;
            var typeInstalMedium = types[j].getElementsByTagName("InstallationMedium")[0].childNodes[0].nodeValue;

            //--create object
            var webType = {
                category: category,
                typeDescription: typeDescription,
                typeName: typeName,
                typeMount: typeMount,
                typePlacement: typePlacement,
                typeInstalMedium: typeInstalMedium
            }
            typesList.push(webType);
        }
    }

    updateTable(typesList);

    //----------------Methods---------------------------
    function search() {
        var input = document.getElementById("searchInput");
        var searchList = new Array();
        if (sortedList.length === 0) {
            for (var i = 0; i < typesList.length; i++) {
                if (typesList[i].typeName.includes(input.value) || typesList[i].typeDescription.includes(input.value))
                    searchList.push(typesList[i]);
            }
        } else {
            for (var j = 0; j < sortedList.length; j++) {
                if (sortedList[j].typeName.includes(input.value) || sortedList[j].typeDescription.includes(input.value))
                    searchList.push(sortedList[j]);
            }
        }
        updateTable(searchList);
    }

    function selectCategory(categoryName) {
        instalMedium = new Array();
        sortedList = new Array();
        for (var j = 0; j < typesList.length; j++) {
            if (typesList[j].category === categoryName) {
                sortedList.push(typesList[j]);
            }
        }
        var instalMediumAll = new Array();
        if (sortedList.length !== 0) {
            for (var i = 0; i < sortedList.length; i++) {
                instalMediumAll.push(sortedList[i].typeInstalMedium);
            }
        } else {
            for (var l = 0; l < typesList.length; l++) {
                instalMediumAll.push(typesList[l].typeInstalMedium);
            }
        }

        $.each(instalMediumAll,
            function(i, el) {
                if ($.inArray(el, instalMedium) === -1) instalMedium.push(el);
            });

        var instalCategories = "";
        for (var i = 0; i < instalMedium.length; i++) {

            instalCategories += "<p><div style=\"float: left; width: 40px\">" +
                "<label class=\"switch\">" +
                "<input id=\"instalSwitch" +
                instalMedium[i] +
                "\" type=\"checkbox\" onclick=\"sortData()\">" +
                "<span class=\"slider round\"></span>" +
                "</label>" +
                "</div>" +
                "<div>" +
                instalMedium[i] +
                "</div></p>";
        }
        document.getElementById("installMediumCategories").innerHTML = instalCategories;

        ceiling.checked = false;
        wall.checked = false;
        floor.checked = false;

        internal.checked = false;
        external.checked = false;

        updateTable(sortedList);
    }

    function updateTable(typesList) {
        var tableUpdated =
            "<colgroup><col style=\"width: 6%\">" +
                "<col style=\"width: 20%\">" +
                "<col style=\"width: 50%\">" +
                "<col style=\"width: 8%\">" +
                "<col style=\"width: 8%\">" +
                "<col style=\"width: 12%\">" +
                "</colgroup>" +
                "<tr>" +
                "<th>Bild</th>" +
                //"<th>Category</th>" +
                "<th>Beschreibung</th>" +
                "<th>Type Name</th>" +
                "<th ></th>" +
                "<th ></th>" +
                "<th >Installation Medium</th>" +
                "</tr>";
        for (var i = 0; i < typesList.length; i++) {
            tableUpdated += "<tr>" +
                "<td style=\"text- align: center;\"><img src= \"typeImages/" + typesList[i].typeName + ".PNG\" style=\"width:32px; height:32px\"/>" +
                "<td>" + typesList[i].typeDescription.replace(/(\r\n\t|\n|\r\t)/gm, "") + "</td>" +
                "<td><a class=\"btn btn-link\" onclick=\"showDetails(this.innerText)\" style=\"white-space: normal; word-wrap: break-word\" target=\"_blanc\">" + typesList[i].typeName.replace(/(\r\n\t|\n|\r\t)/gm, "") +"</a></td>" +
               
                "<td>" +typesList[i].typeMount +"</td>" +
                "<td>" +typesList[i].typePlacement +"</td>" +
                "<td>" +typesList[i].typeInstalMedium +"</td>" +
                "</tr>";
        }
        document.getElementById("TypeData").innerHTML = tableUpdated;
    }

    function sortData() {
        var sortedResult = new Array();
        var selectMountArr = selectMount();
        var selectPlacementArr = selectPlacement();
        var selectMediumArr = selectMedium();

        for (var i = 0; i < selectMountArr.length; i++) {
            for (var j = 0; j < selectPlacementArr.length; j++) {
                for (var k = 0; k < selectMediumArr.length; k++) {
                    if (selectMountArr[i] === selectPlacementArr[j] && selectMountArr[i] === selectMediumArr[k])
                        sortedResult.push(selectMountArr[i]);
                }
            }
        }
        updateTable(sortedResult);
    }

    function selectMedium() {
        var selectArr = new Array();
        for (var i = 0; i < instalMedium.length; i++) {
            if (document.getElementById("instalSwitch" + instalMedium[i]).checked) {
                for (var j = 0; j < sortedList.length; j++) {
                    if (sortedList[j].typeInstalMedium === instalMedium[i])
                        selectArr.push(sortedList[j]);
                }
            }
        }
        if (selectArr.length === 0)
            selectArr = sortedList;
        return selectArr;
    }


    function selectMount() {
        var sortedListMount = new Array();
        var emptyArr = sortEmptyMount();
        var internalArr = sortMount(internal, "UP");
        var externalArr = sortMount(external, "AP");

        sortedListMount = emptyArr.concat(internalArr);
        sortedListMount = sortedListMount.concat(externalArr);

        if (!internal.checked && !external.checked) {
            if (sortedList.length !== 0) {
                sortedListMount = sortedList;
            } else {
                sortedListMount = typesList;
            }
        }
        return sortedListMount;
    }

    function sortMount(state, mount) {
        var sortedListMount = new Array();
        if (state.checked) {
            if (sortedList.length !== 0) {
                for (var i = 0; i < sortedList.length; i++) {
                    if (sortedList[i].typeMount === mount || sortedList[i].typeMount === "N" + mount)
                        sortedListMount.push(sortedList[i]);
                }
            } else {

                for (var j = 0; j < typesList.length; j++) {
                    if (typesList[j].typeMount === mount || typesList[j].typeMount === "N" + mount)
                        sortedListMount.push(typesList[j]);
                }
            }
        }
        return sortedListMount;
    }

    function sortEmptyMount() {
        var sortedListMount = new Array();
        if (sortedList.length > 0) {
            for (var i = 0; i < sortedList.length; i++) {
                if (sortedList[i].typeMount === " --- ")
                    sortedListMount.push(sortedList[i]);
            }
        } else {
            for (var j = 0; j < typesList.length; j++) {
                if (typesList[j].typeMount === " --- ")
                    sortedListMount.push(typesList[j]);
            }
        }

        return sortedListMount;
    }

    function selectPlacement() {

        var sortedListPlacement = new Array();
        var emptyPlacementArr = sortEmptyPlacement();
        var floorPlacementArr = sortPlacement(floor, "Boden");
        var ceilingPlacementArr = sortPlacement(ceiling, "Decke");
        var wallPlacementArr = sortPlacement(wall, "Wand");

        sortedListPlacement = emptyPlacementArr.concat(floorPlacementArr);
        sortedListPlacement = sortedListPlacement.concat(ceilingPlacementArr);
        sortedListPlacement = sortedListPlacement.concat(wallPlacementArr);

        if (!floor.checked && !wall.checked && !ceiling.checked) {
            if (sortedList.length !== 0) {
                sortedListPlacement = sortedList;
            } else {
                sortedListPlacement = typesList;
            }
        }
        return sortedListPlacement;
    }

    function sortPlacement(state, place) {
        var sortedListPlacement = new Array();
        if (state.checked) {
            if (sortedList.length > 0) {
                for (var i = 0; i < sortedList.length; i++) {
                    if (sortedList[i].typePlacement === place)
                        sortedListPlacement.push(sortedList[i]);
                }
            } else {
                for (var j = 0; j < typesList.length; j++) {
                    if (typesList[j].typePlacement === place)
                        sortedListPlacement.push(typesList[j]);
                }
            }
        }

        return sortedListPlacement;
    }

    function sortEmptyPlacement() {
        var sortedListPlacement = new Array();
        if (sortedList.length > 0) {
            for (var i = 0; i < sortedList.length; i++) {
                if (sortedList[i].typePlacement === " --- ")
                    sortedListPlacement.push(sortedList[i]);
            }
        } else {
            for (var j = 0; j < typesList.length; j++) {
                if (typesList[j].typePlacement === " --- ") {
                    sortedListPlacement.push(typesList[j]);
                }
            }
        }
        return sortedListPlacement;
    }

    function showDetails(value) {
        var selectedItem;
       
        for (var i = 0; i < typesList.length; i++) {
            if (typesList[i].typeName.replace(/\s+/g, "").includes(value.replace(/\s+/g, ""))) {
                selectedItem = typesList[i];
            }
        }
        var uploadField = document.getElementById("typeFileName");
        uploadField.value = selectedItem.typeName;
        var submitButton = document.getElementById("typeNameSubmit");
        submitButton.click();

        var tableDetails = " <colgroup><col style=\"width: 50%\">" +
            "<col style=\"width: 50%\">" +
            "</colgroup>" +
            "<tr><th>Element</th><th>Parameter</th></tr>" +
            "<tr><td>Bild:</td><td><img src = \"/typeImages/" + selectedItem.typeName + ".PNG\" style=\"width:64px; height:64px\"</td></tr>" +
            "<tr><td>FamilienTyp:</td><td>" + selectedItem.typeName + "</td></tr>" +
            "<tr><td>Bauteilbezeichnung:</td><td>" + selectedItem.typeDescription + "</td></tr>" +
            "<tr><td>Installationsart:</td><td>" + selectedItem.typePlacement + "</td></tr>" +
            "<tr><td>Installationsort:</td><td>" + selectedItem.typeMount + "</td></tr>" +
            "<tr><td>Installations-Medium:</td><td>" + selectedItem.typeInstalMedium + "</td></tr>" +
            "<tr><th>Grösse:</th><td>" +
            "<tr><td>Durchmesser:</td><td>" +
            "[E_Durchmesser]" +
            "</td></tr>" +
            "<tr><td>Breite:</td><td>" +
            "[E_Breite]" +
            "</td></tr>" +
            "<tr><td>Hohe:</td><td>" +
            "[E_Hohe]" +
            "</td></tr>" +
            "<tr><td>Tiefe:</td><td>" +
            "[E_Tiefe]" +
            "</td></tr>" +
            "<tr><th>Elektro</th><td>" +
            "<tr><td>eBKP-H:</td><td>" +
            "[eBKP-H]" +
            "</td></tr>" +
            "<tr><td>BKP:</td><td>" +
            "[BKP]" +
            "</td></tr>" +
            "<tr><th>Produkt</th><td>" +
            "<tr><td>Fabricat</td><td>" +
            "*" +
            "</td></tr>" +
            "<tr><td>Produkt</td><td>" +
            "*" +
            "</td></tr>" +
            "<tr><td>Produkte-Nr.</td><td>" +
            "*" +
            "</td></tr>" +
            "<tr><td>E-Nummer</td><td>" +
            "*" +
            "</td></tr>" +
            "<tr><th>Technische Eigenschaften</th><td>" +
            "<tr><td>RevitKategorie:</td><td>" +
            "[Kategorie]" +
            "</td></tr>" +
            "<tr><td>OmniClass-Nummer</td><td>" +
            "[OmniClass-Nummer]" +
            "</td></tr>";
       // document.getElementById("TypeDetails").innerHTML = tableDetails;

        var newWindow = window.open('Home/Details', 'Details');
        newWindow.onload = function () {
            newWindow.document.getElementById("TypeDetails").innerHTML = tableDetails;
            console.log();
        }
    }
</script>
