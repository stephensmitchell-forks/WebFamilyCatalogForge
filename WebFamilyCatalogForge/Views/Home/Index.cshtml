@using Microsoft.AspNetCore.Mvc.Rendering
@{
    ViewData["Title"] = "Home Page";
}

<body>
    <div class="row">
        <div class="col-md-2">
            <button class="accordion" style="margin-top: 45px">ELEMENT</button>
            <div class="panel">
                <button class="btn btn-link" onclick="selectCategory(this.innerText)">Elektrische Ausstattung</button><br />
                <button class="btn btn-link" onclick="selectCategory(this.innerText)">Elektroinstallationen</button><br />
                <button class="btn btn-link" onclick="selectCategory(this.innerText)">Kabeltrassen</button><br />
                <button class="btn btn-link" onclick="selectCategory(this.innerText)">Kommunikationsgeräte</button><br />
                <button class="btn btn-link" onclick="selectCategory(this.innerText)">Datengeräte</button><br />
                <button class="btn btn-link" onclick="selectCategory(this.innerText)">Telefongeräte</button><br />
                <button class="btn btn-link" onclick="selectCategory(this.innerText)">Brandmeldegeräte</button><br />
                <button class="btn btn-link" onclick="selectCategory(this.innerText)">Lichtschalter</button><br />
                <button class="btn btn-link" onclick="selectCategory(this.innerText)">Leuchten</button><br />
                <button class="btn btn-link" onclick="selectCategory(this.innerText)">Notrufgeräte</button><br />
                <button class="btn btn-link" onclick="selectCategory(this.innerText)">Sicherheitsgeräte</button><br />
                <button class="btn btn-link" onclick="selectCategory(this.innerText)">Erdung</button><br />
                <button class="btn btn-link" onclick="selectCategory(this.innerText)">Allgemeines Modell</button><br />
                <button class="btn btn-link" onclick="selectCategory(this.innerText)">Legenden</button><br />
            </div>

            <button class="accordion">INSTALLATIONSMEDIUM</button>
            <div id="installMediumCategories" class="panel">
                <p>Nach Kategorie...</p>
            </div>

            <button class="accordion">INSTALLATIONSORT</button>
            <div class="panel">
                <p>
                    <div style="float: left; width: 40px">
                        <label class="switch">
                            <input id="placementCeiling" type="checkbox" onclick="sortData()">
                            <span class="slider round"></span>
                        </label>
                    </div>
                    <div>Decke</div>
                </p>

                <p>
                    <div style="float: left; width: 40px">
                        <label class="switch">
                            <input id="placementWall" type="checkbox" onclick="sortData()">
                            <span class="slider round"></span>
                        </label>
                    </div>
                    <div>Wand</div>
                </p>
                <p>
                    <div style="float: left; width: 40px">
                        <label class="switch">
                            <input id="placementFloor" type="checkbox" onclick="sortData()">
                            <span class="slider round"></span>
                        </label>
                    </div>
                    <div>Boden</div>
                </p>
            </div>

            <button class="accordion">INSTALLATIONSART</button>
            <div class="panel">
                <p>
                    <div style="float: left; width: 40px">
                        <label class="switch">
                            <input id="internalMount" type="checkbox" onclick="sortData()">
                            <span class="slider round"></span>
                        </label>
                    </div>
                    <div>Unterputzmontage</div>
                </p>
                <p>
                    <div style="float: left; width: 40px">
                        <label class="switch">
                            <input id="externalMount" type="checkbox" onclick="sortData()">
                            <span class="slider round"></span>
                        </label>
                    </div>
                    <div>Aufputzmontage</div>
                </p>
            </div>
        </div>
        <div class="col-md-8">

            <div>
                <table id="TypeData"></table>
            </div>
        </div>
    </div>

</body>

<style>
    #TypeData, #TypeDetails {
        margin-top: 45px;
        table-layout: fixed;
        width: 100%;
        border: 0px solid red;
        border-collapse: collapse;
    }

        #TypeData tr:nth-child(even), #TypeDetails tr:nth-child(even) {
            background-color: #f2f2f2
        }

        #TypeData tr:hover, #TypeDetails tr:hover {
            background-color: #ddd
        }

        #TypeData th, #TypeDetails th {
            padding-top: 12px;
            padding-bottom: 12px;
            text-align: left;
            background-color: white;
            color: black;
            text-align: center
        }

        #TypeData td, #TypeData th, #TypeDetails td, #TypeDetails th {
            border: 1px solid #ddd;
            padding: 8px;
            word-wrap: break-word
        }

    .accordion {
        background-color: white;
        color: black;
        cursor: pointer;
        padding: 18px;
        width: 100%;
        text-align: left;
        border: none;
        outline: none;
        transition: 0.4s;
    }

        .active, .accordion:hover {
            background-color: #e2001a;
            color: white;
        }

    /* Style the accordion panel. Note: hidden by default */
    .panel {
        padding: 0 0px;
        background-color: white;
        border-bottom: greenyellow;
        display: none;
        overflow: hidden
    }

    .switch {
        position: relative;
        display: inline-block;
        width: 32px;
        height: 20px
    }

        /* Hide default HTML checkbox */
        .switch input {
            display: none;
        }

    /* The slider */
    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        -webkit-transition: .4s;
        transition: .4s
    }

        .slider:before {
            position: absolute;
            content: "";
            height: 14px;
            width: 14px;
            left: 4px;
            bottom: 3px;
            background-color: white;
            -webkit-transition: .4s;
            transition: .4s;
        }

    input:checked + .slider {
        background-color: #e2001a
    }

    input:focus + .slider {
        box-shadow: 0 0 1px black;
    }

    input:checked + .slider:before {
        -webkit-transform: translateX(10px);
        -ms-transform: translateX(10px);
        transform: translateX(10px);
    }

    /* Rounded sliders */
    .slider.round {
        border-radius: 16px;
    }

        .slider.round:before {
            border-radius: 50%;
        }
    .btn {
        color: black;
    }
    .btn:hover {
        color: #e2001a;
    }
   
</style>

<script>
    var acc = document.getElementsByClassName("accordion");
    var i;

    for (i = 0; i < acc.length; i++) {
        acc[i].addEventListener("click", function () {
            this.classList.toggle("active");
            var panel = this.nextElementSibling;
            if (panel.style.display === "block") {
                panel.style.display = "none";
            } else {
                panel.style.display = "block";
            }
        });
        acc[i].click();
    }
</script>

<script>
    console.log("ScriptStarted");
    var xmlhttp = new XMLHttpRequest();
    xmlhttp.open("GET", "xml/FamilyData.xml", false);
    xmlhttp.send();
    var xmlDoc = xmlhttp.responseXML;
    var sortedList = new Array();
    var typesList = new Array();
    var instalMedium = new Array();
    var selectedItem;
    // console.log(xmlhttp.responseXML);

    var ceiling = document.getElementById("placementCeiling");
    var wall = document.getElementById("placementWall");
    var floor = document.getElementById("placementFloor");

    var external = document.getElementById("externalMount");
    var internal = document.getElementById("internalMount");

    var family = xmlDoc.getElementsByTagName("FamilyData");

    for (var i = 0; i < family.length; i++) {
        var types = family[i].getElementsByTagName("FamilyTypeData");
        for (var j = 0; j < types.length; j++) {
            var category = family[i].getElementsByTagName("Category")[0].childNodes[0].nodeValue;

            var typeName = types[j].getElementsByTagName("Name")[0].childNodes[0].nodeValue;
            var typeDescription = " --- ";
            try {
                typeDescription =
                    types[j].getElementsByTagName("Description")[0].childNodes[0].nodeValue.replace(
                        /(\r\n\t|\n|\r\t)/gm,
                        "");
            } catch (error) {
                console.error(error);
            }

            var typeCombinedDescription = types[j].getElementsByTagName("CombinedTypeData")[0].childNodes[0].nodeValue;
            var typeMount = types[j].getElementsByTagName("MountType")[0].childNodes[0].nodeValue;
            var typePlacement = types[j].getElementsByTagName("Placement")[0].childNodes[0].nodeValue;
            var typeInstalMedium = types[j].getElementsByTagName("InstallationMedium")[0].childNodes[0].nodeValue;

            var familyName = family[i].getElementsByTagName("FamilyName")[0].childNodes[0].nodeValue;
            //console.log(types[j].getElementsByTagName("Diameter")[0].childNodes[0]);

            var typeDiameter = types[j].getElementsByTagName("Diameter")[0].childNodes[0].nodeValue;
            var typeWidth = types[j].getElementsByTagName("Width")[0].childNodes[0].nodeValue;
            var typeHight = types[j].getElementsByTagName("Hight")[0].childNodes[0].nodeValue;
            var typeDepth = types[j].getElementsByTagName("Depth")[0].childNodes[0].nodeValue;

            var type_eBKP_H = types[j].getElementsByTagName("eBKP_H")[0].childNodes[0].nodeValue;
            var typeBKP = types[j].getElementsByTagName("BKP")[0].childNodes[0].nodeValue;

            var typeManufacturer = types[j].getElementsByTagName("Manufacturer")[0].childNodes[0].nodeValue;
            var typeProduct = types[j].getElementsByTagName("Product")[0].childNodes[0].nodeValue;
            var typeProductNumber = types[j].getElementsByTagName("ProductNumber")[0].childNodes[0].nodeValue;
            var typeE_Number = types[j].getElementsByTagName("E_Number")[0].childNodes[0].nodeValue;

            var typeRevitCategory = types[j].getElementsByTagName("RevitCategory")[0].childNodes[0].nodeValue;
            var typeOmniClass = types[j].getElementsByTagName("OmniClass")[0].childNodes[0].nodeValue;

            //--create object
            if (category !== "Beschriftungen") {
                var webType = {
                    category: category,
                    typeDescription: typeDescription,
                    typeName: typeName,
                    typeMount: typeMount,
                    typePlacement: typePlacement,
                    typeInstalMedium: typeInstalMedium,
                    typeFamily: familyName,
                    typeManufacturer: typeManufacturer,
                    typeProduct: typeProduct,
                    typeProductNumber: typeProductNumber,
                    typeE_Number: typeE_Number,
                    typeRevitCategory: typeRevitCategory,
                    typeOmniClass: typeOmniClass,
                    typeDiameter: typeDiameter,
                    typeWidth: typeWidth,
                    typeHight: typeHight,
                    typeDepth: typeDepth,
                    type_eBKP_H: type_eBKP_H,
                    typeBKP: typeBKP
                }
                typesList.push(webType);
            }
        }
    }

    updateTable(typesList);

    //----------------Methods---------------------------
    function search() {
        var input = document.getElementById("searchInput");
        var searchList = new Array();
        if (sortedList.length === 0) {
            for (var i = 0; i < typesList.length; i++) {
                if (typesList[i].typeName.includes(input.value) || typesList[i].typeDescription.includes(input.value))
                    searchList.push(typesList[i]);
            }
        } else {
            for (var j = 0; j < sortedList.length; j++) {
                if (sortedList[j].typeName.includes(input.value) || sortedList[j].typeDescription.includes(input.value))
                    searchList.push(sortedList[j]);
            }
        }
        updateTable(searchList);
    }

    function selectCategory(categoryName) {
        instalMedium = new Array();
        sortedList = new Array();
        for (var j = 0; j < typesList.length; j++) {
            if (typesList[j].category === categoryName) {
                sortedList.push(typesList[j]);
            }
        }
        var instalMediumAll = new Array();
        if (sortedList.length !== 0) {
            for (var i = 0; i < sortedList.length; i++) {
                instalMediumAll.push(sortedList[i].typeInstalMedium);
            }
        } else {
            for (var l = 0; l < typesList.length; l++) {
                instalMediumAll.push(typesList[l].typeInstalMedium);
            }
        }

        $.each(instalMediumAll,
            function (i, el) {
                if ($.inArray(el, instalMedium) === -1) instalMedium.push(el);
            });

        var instalCategories = "";
        for (var i = 0; i < instalMedium.length; i++) {

            instalCategories += "<p><div style=\"float: left; width: 40px\">" +
                "<label class=\"switch\">" +
                "<input id=\"instalSwitch" +
                instalMedium[i] +
                "\" type=\"checkbox\" onclick=\"sortData()\">" +
                "<span class=\"slider round\"></span>" +
                "</label>" +
                "</div>" +
                "<div>" +
                instalMedium[i] +
                "</div></p>";
        }
        document.getElementById("installMediumCategories").innerHTML = instalCategories;

        ceiling.checked = false;
        wall.checked = false;
        floor.checked = false;

        internal.checked = false;
        external.checked = false;

        updateTable(sortedList);
    }

    function updateTable(typesList) {
        var tableUpdated =
            "<colgroup><col style=\"width: 6%\">" +
            "<col style=\"width: 20%\">" +
            "<col style=\"width: 50%\">" +
            "<col style=\"width: 8%\">" +
            "<col style=\"width: 8%\">" +
            "<col style=\"width: 12%\">" +
            "</colgroup>" +
            "<tr>" +
            "<th>BILD</th>" +
            //"<th>Category</th>" +
            "<th>BESCHREIBUNG</th>" +
            "<th>TYPE NAME</th>" +
            "<th ></th>" +
            "<th ></th>" +
            "<th >INSTALLATION MEDIUM</th>" +
            "</tr>";
        for (var i = 0; i < typesList.length; i++) {
            tableUpdated += "<tr>" +
                "<td style=\"text- align: center;\"><img src= \"typeImages/" + typesList[i].typeFamily + " - " + typesList[i].typeName + ".PNG\" style=\"width:32px; height:32px\"/>" +
                "<td>" + typesList[i].typeDescription.replace(/(\r\n\t|\n|\r\t)/gm, "") + "</td>" +
                "<td><a href=\"home/Details\"class=\"btn btn-link\" onclick=\"showDetails(this.innerText)\" style=\"white-space: normal; word-wrap: break-word\" target=\"_self\">" + typesList[i].typeName.replace(/(\r\n\t|\n|\r\t)/gm, "") + "</a></td>" +

                "<td>" + typesList[i].typeMount + "</td>" +
                "<td>" + typesList[i].typePlacement + "</td>" +
                "<td>" + typesList[i].typeInstalMedium + "</td>" +
                "</tr>";
        }
        document.getElementById("TypeData").innerHTML = tableUpdated;
    }

    function sortData() {
        var sortedResult = new Array();
        var selectMountArr = selectMount();
        var selectPlacementArr = selectPlacement();
        var selectMediumArr = selectMedium();

        for (var i = 0; i < selectMountArr.length; i++) {
            for (var j = 0; j < selectPlacementArr.length; j++) {
                for (var k = 0; k < selectMediumArr.length; k++) {
                    if (selectMountArr[i] === selectPlacementArr[j] && selectMountArr[i] === selectMediumArr[k])
                        sortedResult.push(selectMountArr[i]);
                }
            }
        }
        updateTable(sortedResult);
    }

    function selectMedium() {
        var selectArr = new Array();
        for (var i = 0; i < instalMedium.length; i++) {
            if (document.getElementById("instalSwitch" + instalMedium[i]).checked) {
                for (var j = 0; j < sortedList.length; j++) {
                    if (sortedList[j].typeInstalMedium === instalMedium[i])
                        selectArr.push(sortedList[j]);
                }
            }
        }
        if (selectArr.length === 0)
            selectArr = sortedList;
        return selectArr;
    }


    function selectMount() {
        var sortedListMount = new Array();
        var emptyArr = sortEmptyMount();
        var internalArr = sortMount(internal, "UP");
        var externalArr = sortMount(external, "AP");

        sortedListMount = emptyArr.concat(internalArr);
        sortedListMount = sortedListMount.concat(externalArr);

        if (!internal.checked && !external.checked) {
            if (sortedList.length !== 0) {
                sortedListMount = sortedList;
            } else {
                sortedListMount = typesList;
            }
        }
        return sortedListMount;
    }

    function sortMount(state, mount) {
        var sortedListMount = new Array();
        if (state.checked) {
            if (sortedList.length !== 0) {
                for (var i = 0; i < sortedList.length; i++) {
                    if (sortedList[i].typeMount === mount || sortedList[i].typeMount === "N" + mount)
                        sortedListMount.push(sortedList[i]);
                }
            } else {

                for (var j = 0; j < typesList.length; j++) {
                    if (typesList[j].typeMount === mount || typesList[j].typeMount === "N" + mount)
                        sortedListMount.push(typesList[j]);
                }
            }
        }
        return sortedListMount;
    }

    function sortEmptyMount() {
        var sortedListMount = new Array();
        if (sortedList.length > 0) {
            for (var i = 0; i < sortedList.length; i++) {
                if (sortedList[i].typeMount === " --- ")
                    sortedListMount.push(sortedList[i]);
            }
        } else {
            for (var j = 0; j < typesList.length; j++) {
                if (typesList[j].typeMount === " --- ")
                    sortedListMount.push(typesList[j]);
            }
        }

        return sortedListMount;
    }

    function selectPlacement() {

        var sortedListPlacement = new Array();
        var emptyPlacementArr = sortEmptyPlacement();
        var floorPlacementArr = sortPlacement(floor, "Boden");
        var ceilingPlacementArr = sortPlacement(ceiling, "Decke");
        var wallPlacementArr = sortPlacement(wall, "Wand");

        sortedListPlacement = emptyPlacementArr.concat(floorPlacementArr);
        sortedListPlacement = sortedListPlacement.concat(ceilingPlacementArr);
        sortedListPlacement = sortedListPlacement.concat(wallPlacementArr);

        if (!floor.checked && !wall.checked && !ceiling.checked) {
            if (sortedList.length !== 0) {
                sortedListPlacement = sortedList;
            } else {
                sortedListPlacement = typesList;
            }
        }
        return sortedListPlacement;
    }

    function sortPlacement(state, place) {
        var sortedListPlacement = new Array();
        if (state.checked) {
            if (sortedList.length > 0) {
                for (var i = 0; i < sortedList.length; i++) {
                    if (sortedList[i].typePlacement === place)
                        sortedListPlacement.push(sortedList[i]);
                }
            } else {
                for (var j = 0; j < typesList.length; j++) {
                    if (typesList[j].typePlacement === place)
                        sortedListPlacement.push(typesList[j]);
                }
            }
        }

        return sortedListPlacement;
    }

    function sortEmptyPlacement() {
        var sortedListPlacement = new Array();
        if (sortedList.length > 0) {
            for (var i = 0; i < sortedList.length; i++) {
                if (sortedList[i].typePlacement === " --- ")
                    sortedListPlacement.push(sortedList[i]);
            }
        } else {
            for (var j = 0; j < typesList.length; j++) {
                if (typesList[j].typePlacement === " --- ") {
                    sortedListPlacement.push(typesList[j]);
                }
            }
        }
        return sortedListPlacement;
    }

    function showDetails(value) {

        for (var i = 0; i < typesList.length; i++) {
            if (typesList[i].typeName.replace(/\s+/g, "").includes(value.replace(/\s+/g, ""))) {
                selectedItem = typesList[i];
            }
        }

        //var newWindow = window.self;

        // var newWindow = window.open('Home/Details', "_self");
        //  newWindow.onload = function () {
        localStorage.clear();
        localStorage.setItem("typeName", selectedItem.typeName);
        localStorage.setItem("typeDescription", selectedItem.typeDescription);
        localStorage.setItem("typePlacement", selectedItem.typePlacement);
        localStorage.setItem("typeMount", selectedItem.typeMount);
        localStorage.setItem("typeInstalMedium", selectedItem.typeInstalMedium);

        localStorage.setItem("typeManufacturer", selectedItem.typeManufacturer);
        localStorage.setItem("typeProduct", selectedItem.typeProduct);
        localStorage.setItem("typeProductNumber", selectedItem.typeProductNumber);
        localStorage.setItem("typeE_Number", selectedItem.typeE_Number);

        localStorage.setItem("typeRevitCategory", selectedItem.typeRevitCategory);
        localStorage.setItem("typeOmniClass", selectedItem.typeOmniClass);

        localStorage.setItem("typeDiameter", selectedItem.typeDiameter);
        localStorage.setItem("typeWidth", selectedItem.typeWidth);
        localStorage.setItem("typeHight", selectedItem.typeHight);
        localStorage.setItem("typeDepth", selectedItem.typeDepth);

        localStorage.setItem("type_eBKP_H", selectedItem.type_eBKP_H);
        localStorage.setItem("typeBKP", selectedItem.typeBKP);


        var pictureStorage = "<img src= \"/typeImages/" + selectedItem.typeFamily + " - " +
            selectedItem.typeName +
            ".PNG\" style=\"width:240px; height:240px; display: block; margin: auto\">";
        localStorage.setItem("picture", pictureStorage);

        //var typeName = newWindow.document.getElementById("typeName");
        //typeName.innerHTML = selectedItem.typeName;
        //var typeDescription = newWindow.document.getElementById("typeDescription");
        //typeDescription.innerHTML = selectedItem.typeDescription;
        //var typePlacement = newWindow.document.getElementById("typePlacement");
        //typePlacement.innerHTML = selectedItem.typePlacement;
        //var typeMount = newWindow.document.getElementById("typeMount");
        //typeMount.innerHTML = selectedItem.typeMount;
        //var typeInstalMedium = newWindow.document.getElementById("typeInstalMedium");
        //typeInstalMedium.innerHTML = selectedItem.typeInstalMedium;

        //var typeManufacturer = newWindow.document.getElementById("typeManufacturer");
        //typeManufacturer.innerHTML = selectedItem.typeManufacturer;

        //var typeProduct = newWindow.document.getElementById("typeProduct");
        //typeProduct.innerText = "Test";

        //var picture = newWindow.document.getElementById("Picture");
        //picture.innerHTML = "<img src= \"/typeImages/" + selectedItem.typeFamily + " - " + selectedItem.typeName + ".PNG\" style=\"width:240px; height:240px; display: block; margin: auto\">";

        //var uploadField = newWindow.document.getElementById("typeFileName");
        //uploadField.value = selectedItem.typeName;
        //var submitButton = newWindow.document.getElementById("typeNameSubmit");
        //submitButton.click();

        //}
    }
</script>
